from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from database.models import update_user_onboarding, get_user_onboarding_status
from keyboards.onboarding_kb import get_skip_keyboard, get_subjects_keyboard, get_interests_keyboard, get_country_keyboard
from config.settings import settings

onboarding_router = Router() 

class OnboardingStates(StatesGroup):
    waiting_for_country = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
    waiting_for_interests = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
    waiting_for_subject = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
    
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∞—Ç –≥—Ä—É–ø–ø–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
def is_manager_group(message):
    return message.chat.id == settings.MANAGER_CHAT_ID and message.chat.type != 'private'
    
async def start_onboarding(message: Message, state: FSMContext):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if is_manager_group(message):
        return
        
    await state.set_state(OnboardingStates.waiting_for_country)
    await message.answer(
        """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ–±—ã —è –º–æ–≥ –ª—É—á—à–µ –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º, –æ—Ç–≤–µ—Ç—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.

–ò–∑ –∫–∞–∫–æ–π –≤—ã —Å—Ç—Ä–∞–Ω—ã?""",
        reply_markup=get_country_keyboard()
    )


@onboarding_router.message(OnboardingStates.waiting_for_country)
async def process_country(message: Message, state: FSMContext):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if is_manager_group(message):
        return
        
    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        country = None
    else:
        country = message.text
        await update_user_onboarding(message.from_user.id, country = country)
    
    await state.update_data(country=country)
    await state.set_state(OnboardingStates.waiting_for_interests)
    await message.answer(
        '''–ö–∞–∫–∏–µ —Ç–µ–º—ã –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç? –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —à–∞–≥.''',
        reply_markup=get_interests_keyboard()
    )
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –æ–± –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö
@onboarding_router.message(OnboardingStates.waiting_for_interests)
async def process_interests(message: Message, state: FSMContext):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if is_manager_group(message):
        return
        
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–æ–ø—Ä–æ—Å
    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        interests = None
    else:
        interests = message.text
        await update_user_onboarding(message.from_user.id, interests=interests)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await state.update_data(interests=interests)
    await state.set_state(OnboardingStates.waiting_for_subject)
    
    await message.answer(
        "–ö–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç –≤—ã –ø—Ä–µ–ø–æ–¥–∞–µ—Ç–µ?",
        reply_markup=get_subjects_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –æ –ø—Ä–µ–¥–º–µ—Ç–µ
@onboarding_router.message(OnboardingStates.waiting_for_subject)
async def process_subject(message: Message, state: FSMContext):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if is_manager_group(message):
        return
        
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–æ–ø—Ä–æ—Å
    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        subject = None
    else:
        subject = message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
    await state.update_data(subject=subject)
    user_data = await state.get_data()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –æ—Ç–º–µ—á–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
    await update_user_onboarding(
        message.from_user.id,
        country=user_data.get('country'),
        interests=user_data.get('interests'),
        subject=subject,
        completed=True
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await state.clear()
    
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –¢–µ–ø–µ—Ä—å —è —Å–º–æ–≥—É –ª—É—á—à–µ –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º.\n\n"
        "–Ø –Ω–µ–π—Ä–æ–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏ –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±–æ–π –≤–∞—à –≤–æ–ø—Ä–æ—Å. "
        "–°–µ–π—á–∞—Å —è —Ä–∞–±–æ—Ç–∞—é –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, –Ω–µ –∑–ª–∏—Ç–µ—Å—å –Ω–∞ –º–µ–Ω—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –µ—Å–ª–∏ —è –Ω–µ —Å–º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å. –û–±–µ—â–∞—é, —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—é—Å—åü§ó\n\n"
        "‚ùóÔ∏è –ß—Ç–æ —è —É–º–µ—é?\n"
        "- –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —É—á–µ–±–Ω–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É.\n"
        "- –ü–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –∫—É—Ä—Å–∞ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏ –∏ —Ü–µ–ª–∏.\n"
        "- –ü–æ–º–æ—á—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.",
        reply_markup=None
    )
